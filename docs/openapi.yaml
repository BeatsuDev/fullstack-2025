openapi: 3.1.0
info:
  title: Vue Calculator
  description: |-
    Just a simple calculator
  version: 1.0.0
  
servers:
  - url: localhost:3000
  
tags:
 - name: Calculations
 - name: Feedback
 - name: User
 - name: Authentication
  
paths:
  /calculate:
    post:
      tags:
        - Calculations
      description: Calculate an expression and store it to history.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalculationRequest"
      responses:
        "201":
          description: Successfully calculated the expression and stored to history.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Calculation"
        "400":
          description: Could not evaluate the expression
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalculationError"
        "401":
          description: No currently logged in session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
  /history/{userId}:
    get:
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
      tags:
        - Calculations
      responses:
        "200":
          description: An array of all previously successfully evaluated expressions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Calculation"
        "401":
          description: No currently logged in session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "403":
          description: The currently logged in session does not have access to this users calculation history
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "404":
          description: The user does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
    delete:
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
      tags:
        - Calculations
      responses:
        "204":
          description: Deletes all history
        "401":
          description: No currently logged in session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "403":
          description: The currently logged in session does not have access to this users calculation history
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "404":
          description: The user does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
                  
  /feedback:
    post:
      tags:
        - Feedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackRequest"
      responses:
        "201":
          description: Successfully created a feedback
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedback"
  /user:
    description: Register, fetch and delete users
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUserRequest"
      responses:
        "201":
          description: Successfully registered a new user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "409":
          description: User already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
    put:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUserRequest"
      responses:
        "200":
          description: Successfully updated the user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: There is not currently logged in session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
  /user/{userId}:
    get:
      tags:
        - User
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: The ID of the user to retrieve
      responses:
        "200":
          description: Successfully returned data for the specified user ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Could not find the user associated with the specified ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
    delete:
      tags:
        - User
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: The ID of the user to delete
      responses:
        "204":
          description: Successfully deleted the user
        "401":
          description: The request is unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "403":
          description: The currently logged in user session is not privileged to delete the user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "404":
          description: The user does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
  /user/session:
    description: Login users or get currently logged in user
    post:
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "201":
          description: Successfully logged in the user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Could not log user in. Wrong credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
        "404":
          description: The user does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
    delete:
      tags:
        - Authentication
      responses:
        "204":
          description: Successfully logged the user out
        "404":
          description: There is no current logged in session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
    put:
      tags:
        - Authentication
      responses:
        "204":
          description: Successfully refreshed the login session
        "404":
          description: There is no current logged in session to refresh
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
    get:
      tags:
        - Authentication
      responses:
        "200":
          description: Successfully retrieved the current user that is logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: There is no logged in session to retrieve
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
      
components:
  schemas:
    CalculationRequest:
      type: object
      required:
        - expression
      properties:
        expression:
          type: string
          examples:
            - 2+2
    Calculation:
      type: object
      required:
        - id
        - expression
        - result
      properties:
        id:
          type: string
        expression:
          type: string
          examples:
            - 2+2
        result:
          type: number
          examples:
            - 4
    CalculationError:
      type: object
      required:
        - expression
        - message
      properties:
        expression:
          type: string
          examples:
            - "1/0"
        message:
          type: string
          examples:
            - "Invalid expression"
    FeedbackRequest:
      type: object
      required:
        - name
        - feedback
      properties:
        name:
          type: string
          examples:
            - "John Doe"
            - "Jane Doe"
        feedback:
          type: string
          examples:
            - "This program sucks!"
            - "I really like this application!"
    Feedback:
      type: object
      required:
        - id
        - name
        - feedback
      properties:
        id:
          type: string
        name:
          type: string
          examples:
            - "John Doe"
            - "Jane Doe"
        feedback:
          type: string
          examples:
            - "This program sucks!"
            - "I really like this application!"
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          examples:
            - johndoe
        password:
          type: string
          examples:
            - supersecure123
    NewUserRequest:
      type: object
      description: Data for creating registering a new user
      required:
        - username
        - displayName
        - password
      properties:
        username:
          type: string
          examples:
            - johndoe
        displayName:
          type: string
          examples:
            - John Doe
        password:
          type: string
          examples:
            - supersecure123
    User:
      type: object
      description: Represents a logged in user
      required:
        - id
        - username
        - displayName
      properties:
        id:
          type: string
          examples:
            - abcdefg-1234567
        username:
          type: string
          examples:
            - johndoe
        displayName:
          type: string
          examples:
            - John Doe
    GenericError:
      type: object
      description: A generic error message response
      required:
        - message
      properties:
        message:
          type: string